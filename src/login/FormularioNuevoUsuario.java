/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package login;
import Consultas.CONSULTASDAO;
import ConexionDB.Conexion_DB;
import Configuraciones.Configuraciones;
import DBObjetos.*;
import PanelUsuarios.UsuariosPanel;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author braul
 */
public class FormularioNuevoUsuario extends javax.swing.JFrame {

    /**
     * Creates new form FormularioNuevoUsuario
     */
    boolean visible = false;
    
    private String rolSeleccionado;
    private ArrayList<String> preguntasSeleccionadas = new ArrayList<>();
    private ArrayList<String> respuestasDadas = new ArrayList<>();
    private int contadorDeRespuestas = 0;
    private UsuariosPanel usuariosPanel; // Referencia a UsuariosPanel


    public FormularioNuevoUsuario(String rol) {
       this.rolSeleccionado = rol; // Establece el rol para el formulario
        initComponents();
        lblRoles.setText(rolSeleccionado); // Muestra el rol en la etiqueta


AbrirVentana();

    }

private void AbrirVentana() {

    setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);  // Evita que la ventana se cierre automáticamente
    addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosing(WindowEvent e) {
            cerrarYVolverAConfiguraciones();
        }
    });
    
}
    

    public void setUsuariosPanel(UsuariosPanel panel) {
        this.usuariosPanel = panel;
    }

    private void cerrarYVolverAConfiguraciones() {
        if (usuariosPanel  != null) {
            usuariosPanel .mostrar();  // Este método hace la ventana Configuraciones visible
        }
        this.dispose();  // Cierra FormularioNuevoUsuario
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomUsuario = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        Nombre = new javax.swing.JTextField();
        Apellido = new javax.swing.JTextField();
        Correo = new javax.swing.JTextField();
        lblRoles = new javax.swing.JLabel();
        Contraseña = new javax.swing.JPasswordField();
        btnContraseña = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(511, 455));
        setPreferredSize(new java.awt.Dimension(511, 455));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        nomUsuario.setText("Nombre de usuario");
        nomUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre de Usuario"));
        nomUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nomUsuarioFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nomUsuarioFocusLost(evt);
            }
        });
        getContentPane().add(nomUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 311, 80));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 340, 100, 40));

        Nombre.setText("Nombre");
        Nombre.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        Nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NombreFocusLost(evt);
            }
        });
        getContentPane().add(Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 40, 179, 70));

        Apellido.setText("Apellido");
        Apellido.setBorder(javax.swing.BorderFactory.createTitledBorder("Apellido"));
        Apellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ApellidoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ApellidoFocusLost(evt);
            }
        });
        getContentPane().add(Apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 40, 207, 70));

        Correo.setText("Correo");
        Correo.setBorder(javax.swing.BorderFactory.createTitledBorder("Correo"));
        Correo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CorreoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                CorreoFocusLost(evt);
            }
        });
        getContentPane().add(Correo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 260, 70));

        lblRoles.setText("REGISTRARSE");
        getContentPane().add(lblRoles, new org.netbeans.lib.awtextra.AbsoluteConstraints(226, 0, 117, -1));

        Contraseña.setText("Contraseña");
        Contraseña.setBorder(javax.swing.BorderFactory.createTitledBorder("Contraseña"));
        Contraseña.setEchoChar('\u0000');
        Contraseña.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ContraseñaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ContraseñaFocusLost(evt);
            }
        });
        getContentPane().add(Contraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 152, 70));

        btnContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContraseñaActionPerformed(evt);
            }
        });
        getContentPane().add(btnContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 350, 40, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private boolean validarCampos(String usuario, String contraseña, String correo, String nombre, String apellido) {
        if (usuario.isEmpty() || contraseña.isEmpty() || correo.isEmpty() || nombre.isEmpty() || apellido.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor complete todos los campos requeridos.");
            return false;
        }

        if (!nombre.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+")) {
            JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras.");
            return false;
        }

        if (!apellido.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+")) {
            JOptionPane.showMessageDialog(this, "El apellido solo puede contener letras.");
            return false;
        }

        if (!correo.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$")) {
            JOptionPane.showMessageDialog(this, "El formato del correo electrónico no es válido.");
            return false;
        }

        if (contraseña.length() < 8) {
            JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 8 caracteres.");
            return false;
        }

        return true;
    }
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    // Obtener valores de los campos de texto
    String usuario = nomUsuario.getText().trim();
    String contraseñaPlana = new String(Contraseña.getPassword()).trim();
    String correo = Correo.getText().trim();
    String nombre = Nombre.getText().trim();
    String apellido = Apellido.getText().trim();

    // Verificar campos
    if (!validarCampos(usuario, contraseñaPlana, correo, nombre, apellido)) {
        return;
    }

    try {
        // Hashea la contraseña antes de enviarla a la base de datos
        String contraseñaHasheada = HashingUtil.hashPassword(contraseñaPlana);
        if (contraseñaHasheada == null) {
            throw new IllegalArgumentException("No se pudo hashear la contraseña.");
        }
        
        // Crear instancia de CONSULTASDAO
        CONSULTASDAO dao = new CONSULTASDAO(Conexion_DB.getConexion());
        
        // El método crearEmpleado ahora también incluye correo, nombre y apellido
        Usuario.Rol rolEnum = Usuario.Rol.valueOf(rolSeleccionado.toUpperCase());
        boolean exito = dao.crearEmpleadosinToken(usuario, contraseñaHasheada, rolEnum, correo, nombre, apellido);

        if (exito) {
            JOptionPane.showMessageDialog(this, "Empleado agregado correctamente.");
            // Restablece el formulario
            //resetFormulario();
                        // Cierra esta ventana y actualiza la tabla en UsuariosPanel
            if (usuariosPanel != null) {
                usuariosPanel.actualizarTablaEmpleados();  // Actualiza la tabla en UsuariosPanel
                usuariosPanel.mostrar();  // Asegura que UsuariosPanel sea visible
            }
            this.dispose();  // Cierra FormularioNuevoUsuario

        } else {
            JOptionPane.showMessageDialog(this, "El nombre de usuario ya existe, cree uno nuevo.");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + ex.getMessage());
    } catch (IllegalArgumentException ex) {
        JOptionPane.showMessageDialog(this, ex.getMessage());
    }
    
    AbrirVentana();
    }//GEN-LAST:event_btnAgregarActionPerformed
 
 

    
    
    private void NombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NombreFocusGained
        if(Nombre.getText().equals("Nombre")){
            Nombre.setText(null);
            Nombre.requestFocus();
            Estilos.removePlaceholderStyle(Nombre);
        }
    }//GEN-LAST:event_NombreFocusGained

    private void NombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NombreFocusLost
        if (Nombre.getText().length() == 0) {
            Estilos.addPlaceholderStyle(Nombre);
            Nombre.setText("Nombre");
        } else if (!Nombre.getText().matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+")) {
            JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras.");
            Nombre.requestFocus();
        }
    }//GEN-LAST:event_NombreFocusLost

    private void ApellidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ApellidoFocusGained
        if (Apellido.getText().equals("Apellido")) {
            Apellido.setText(null);
            Apellido.requestFocus();
            Estilos.removePlaceholderStyle(Apellido);
        }
    }//GEN-LAST:event_ApellidoFocusGained

    private void ApellidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ApellidoFocusLost
        if (Apellido.getText().length() == 0) {
            Estilos.addPlaceholderStyle(Apellido);
            Apellido.setText("Apellido");
        } else if (!Apellido.getText().matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+")) {
            JOptionPane.showMessageDialog(this, "El apellido solo puede contener letras.");
            Apellido.requestFocus();
        }
    }//GEN-LAST:event_ApellidoFocusLost

    private void CorreoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CorreoFocusGained
        if (Correo.getText().equals("Correo")) {
            Correo.setText(null);
            Correo.requestFocus();
            Estilos.removePlaceholderStyle(Correo);
        }
    }//GEN-LAST:event_CorreoFocusGained

    private void CorreoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CorreoFocusLost
        if (Correo.getText().length() == 0) {
            Estilos.addPlaceholderStyle(Correo);
            Correo.setText("Correo");
        } else if (!Correo.getText().matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$")) {
            JOptionPane.showMessageDialog(this, "El formato del correo electrónico no es válido.");
            Correo.requestFocus();
        }
    }//GEN-LAST:event_CorreoFocusLost

    private void nomUsuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomUsuarioFocusGained
        if (nomUsuario.getText().equals("Nombre de usuario")) {
            nomUsuario.setText(null);
            nomUsuario.requestFocus();
            Estilos.removePlaceholderStyle(nomUsuario);
        }
    }//GEN-LAST:event_nomUsuarioFocusGained

    private void nomUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nomUsuarioFocusLost
        if (nomUsuario.getText().length() == 0) {
            Estilos.addPlaceholderStyle(nomUsuario);
            nomUsuario.setText("Nombre de usuario");
        }
    }//GEN-LAST:event_nomUsuarioFocusLost

    private void ContraseñaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ContraseñaFocusGained
        if (new String(Contraseña.getPassword()).equals("Contraseña")) {
            Contraseña.setText(null);
            Contraseña.requestFocus();
            Contraseña.setEchoChar('*');
            Estilos.removePlaceholderStyle(Contraseña);
        }
    }//GEN-LAST:event_ContraseñaFocusGained

    private void ContraseñaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ContraseñaFocusLost
        String contraseña = new String(Contraseña.getPassword());
        if (contraseña.length() == 0) {
            Estilos.addPlaceholderStyle(Contraseña);
            Contraseña.setText("Contraseña");
            Contraseña.setEchoChar('\u0000');
        } else if (contraseña.length() < 8) {
            JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 8 caracteres.");
            Contraseña.requestFocus();
        }
    }//GEN-LAST:event_ContraseñaFocusLost

    private void btnContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContraseñaActionPerformed
        // TODO add your handling code here:
        if (visible) {
            Contraseña.setEchoChar('*'); // Oculta la contraseña
            visible = false;
            btnContraseña.setIcon(new ImageIcon(getClass().getResource("/Icons/cerrarOjo.png")));

        } else {
            Contraseña.setEchoChar((char) 0); // Muestra la contraseña
            visible = true;
            // Cambia el icono a abrirOjo
            btnContraseña.setIcon(new ImageIcon(getClass().getResource("/Icons/abrirOjo.png")));

        }
    }//GEN-LAST:event_btnContraseñaActionPerformed

private void resetFormulario() {
    nomUsuario.setText("");
    Contraseña.setText("");
    Correo.setText("");
    Nombre.setText("");
    Apellido.setText("");
    contadorDeRespuestas = 0;
    preguntasSeleccionadas.clear();
    respuestasDadas.clear();
}



  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Apellido;
    private javax.swing.JPasswordField Contraseña;
    private javax.swing.JTextField Correo;
    private javax.swing.JTextField Nombre;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnContraseña;
    private javax.swing.JLabel lblRoles;
    private javax.swing.JTextField nomUsuario;
    // End of variables declaration//GEN-END:variables
}
